def constant(func):
    def func_set(self, value):
        raise TypeError

    def func_get(self):
        return func()
    return property(func_get, func_set)



class _DelonghiPacket():

    @constant
    def REQ_DELONGHI_STATE() -> str:
        return "0D05750FDA25"
    
    @constant
    def REQ_BREW_ESPRESSO() -> str:
        return "0d1183f00101010028020308000000068ffc"
    
    @constant
    def REQ_BREW_AMERICANO() -> str:
        return "0d0d83f002010100b4020306c4c3"
    
    @constant
    def REQ_BREW_HOT_WATER() -> str:
        return "0d0d83f010010f00fa1c010604b4"
    
    @constant
    def REQ_WAKE_UP() -> str:
        return "0d07840f02015512"
    
    @constant
    def STATUS_READY() -> bytearray:
        return bytearray([0xd0, 0x12, 0x75, 0x0f, 0x01, 0x05, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9d, 0x61])
                        
    @constant
    def STATUS_OFF_POWER() -> bytearray:
        return bytearray([0xd0, 0x12, 0x75, 0x0f, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x03, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd6, 0x96])
    #mini 250114 OFF Status 추가
    @constant
    def STATUS_OFF_POWER_2() -> bytearray:
        return bytearray([0xd0, 0x12, 0x75, 0x0f, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0xfb])
    @constant
    def STATUS_OFF_POWER_3() -> bytearray:
        return bytearray([0xd0, 0x12, 0x75, 0x0f, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8f, 0x2f])  
    @constant
    def STATUS_OFF_POWER_4() -> bytearray: # 물탱크 채우기 떠있는 상태에서 꺼졌을때
        return bytearray([0xd0, 0x12, 0x75, 0x0f, 0x01, 0x41, 0x00, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0x2a])
    @constant
    def STATUS_OFF_POWER_5() -> bytearray: 
        return bytearray([0xd0, 0x12, 0x75, 0x0f, 0x01, 0x41, 0x00, 0x01, 0x00, 0x00, 0x03, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x93])
    @constant
    def STATUS_OFF_POWER_6() -> bytearray: 
        return bytearray([0xd0, 0x12, 0x75, 0x0f, 0x01, 0x45, 0x00, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xfe])
    
    @constant
    def STATUS_OPEN_WATER_TANK() -> bytearray:
        return bytearray([0xd0, 0x12, 0x75, 0x0f, 0x01, 0x15, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaa, 0x31])
    
    @constant
    def STATUS_EMPTY_WATER() -> bytearray:
        return bytearray([0xd0, 0x12, 0x75, 0x0f, 0x01, 0x45, 0x00, 0x01, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x64])
    
    @constant
    def STATUS_EMPTY_WATER_2() -> bytearray:
        return bytearray([0xd0, 0x12, 0x75, 0x0f, 0x01, 0x41, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa2, 0x7b])

    @constant
    def STATUS_FULL_GROUNDS_CONTAINER() -> bytearray:
        return bytearray([0xd0, 0x12, 0x75, 0x0f, 0x01, 0x05, 0x00, 0x02, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0xeb])
    
    @constant
    def STATUS_OPEN_GROUNDS_CONTAINER() -> bytearray:
        return bytearray([0xd0, 0x12, 0x75, 0x0f, 0x01, 0x0d, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0xc9])
    
    @constant
    def STATUS_OPEN_GROUNDS_CONTAINER_2() -> bytearray:
        return bytearray([0xd0, 0x12, 0x75, 0x0f, 0x01, 0x49, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb9, 0xd3])

    @constant
    def STATUS_OPEN_GROUNDS_CONTAINER_3() -> bytearray:
        return bytearray([0xd0, 0x12, 0x75, 0x0f, 0x01, 0x0d, 0x00, 0x00, 0x00, 0x02, 0x01, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xaf])    


    @constant
    def STATUS_BREWING() -> bytearray:
        return bytearray([0xd0, 0x12, 0x75, 0x0f, 0x01, 0x05, 0x00, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0xa7])
    
    @constant
    def STATUS_EMPTY_COFFEE_BEANS() -> bytearray:
        return bytearray([0xd0, 0x12, 0x75, 0x0f, 0x01, 0x05, 0x00, 0x20, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x6c])
    
    @constant
    def STATUS_EMPTY_COFFEE_BEANS_2() -> bytearray:
        return bytearray([0xd0, 0x12, 0x75, 0x0f, 0x01, 0x01, 0x00, 0x20, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc2, 0x89])
                        #['d0', '12', '75', '0f', '01', '0d', '00', '02', '00', '07', '00', '00', '00', '00', '00', '00', '00', '58', '43']
    @constant
    
    def RESPONSE_BREW_CMD() -> bytearray:
        return bytearray([0xd0, 0x07, 0x83, 0xf0, 0x01, 0x00, 0x64, 0xd9])
    

DelonghiPacket = _DelonghiPacket()